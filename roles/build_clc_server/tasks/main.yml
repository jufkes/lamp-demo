- name: CLC | Generate Server Admin Password
  command: openssl rand -base64 15
  register: serverpass
  changed_when: False

- name: CLC | Create LAMP Group
  clc_group:
    name: LAMP
    location: "{{ datacenter }}"
    state: present

- name: CLC | Create HAPROXY Group
  clc_group:
    name: HAPROXY
    location: "{{ datacenter }}"
    state: present

- name: CLC | Build LAMP Server if Needed
  clc_server:
    name: LAMP
    location: "{{ datacenter }}"
    template: centos-6-64
    password: "{{ serverpass.stdout }}"
    exact_count: 2 
    group: LAMP
    count_group: LAMP
    cpu: "{{ cpu }}" 
    memory: "{{ memory }}"
    type: "{{ type }}"
    storage_type: "{{ storage_type }}"
  register: lamp

- name: CLC | Build HAPROXY Server if Needed
  clc_server:
    name: HAPXY
    location: "{{ datacenter }}"
    template: ubuntu-14-64
    password: "{{ serverpass.stdout }}"
    exact_count: 1
    group: HAPROXY
    count_group: HAPROXY
    cpu: "{{ cpu }}" 
    memory: "{{ memory }}"
    type: "{{ type }}"
    storage_type: "{{ storage_type }}"
  register: haproxy

- name: CLC | Add public ipaddress
  clc_publicip:
    server_ids: "{{ item.name }}"
    ports:
      - "80"
    state: present
  with_flattened: haproxy.servers

- name: Wait for SSH to Come up on New Servers
  wait_for: host={{ item.ipaddress }} port=22 delay=5 timeout=320 state=started
  with_flattened:
    - lamp.servers
    - haproxy.servers

- name: Update known_hosts With New Servers
  shell: "ssh-keygen -R {{ item.ipaddress }} && ssh-keyscan -t rsa -H {{ item.ipaddress }} >> ~/.ssh/known_hosts"
  with_flattened:
    - lamp.servers
    - haproxy.servers

- name: Deploy SSH Key to New Servers (Centos)
  shell: "echo '{{ public_key }}'|sshpass -p '{{ serverpass.stdout }}' ssh root@{{ item.ipaddress }} 'mkdir ~/.ssh/ && cat >> ~/.ssh/authorized_keys'"
  with_flattened:
    - lamp.servers

- name: Deploy SSH Key to New Servers (Ubuntu)
  shell: "echo '{{ public_key }}'|sshpass -p '{{ serverpass.stdout }}' ssh root@{{ item.ipaddress }} 'cat >> ~/.ssh/authorized_keys'"
  with_flattened:
    - haproxy.servers

- name: Add New Servers to an in-memory Group
  add_host:
    name={{ item.name }}
    ansible_ssh_host={{ item.ipaddress }}
    ansible_ssh_user=root
    ansible_ssh_private_key_file={{ default_ssh_key_path }}
    groupname=LAMP
  with_items: lamp.servers

- name: Add New Servers to an in-memory Group
  add_host:
    name={{ item.name }}
    ansible_ssh_host={{ item.ipaddress }}
    ansible_ssh_user=root
    ansible_ssh_private_key_file={{ default_ssh_key_path }}
    groupname=HAPROXY
  with_items: haproxy.servers
